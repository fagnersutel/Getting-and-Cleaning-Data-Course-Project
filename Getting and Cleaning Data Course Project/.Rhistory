scource("http://biocondutor.org/boicLite.R")
scource("http://bioconductor.org/boicLite.R")
scource("https://bioconductor.org/bioclite.r/")
scource("https://bioconductor.org/bioclite.r")
source("https://bioconductor.org/bioclite.r")
source("http://bioconductor.org/bioclite.R")
source("http://bioconductor.org/bioclite.R/")
clear
cls
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
library(ggplot2)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
search()
add2<-function(x,y){
x+y
}
add2(3,5)
above<-function(x,n){
use<-x>n
x[use]
}
above<-function(x,n){
use<-x>n
x[use]
}
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above(x,5)
above<-function(x,n=10){
use<-x>n
x[use]
}
above(x)
columnmean<-function(y)
{
nc<-ncol(y)
memans<-numeric(nc)
for (i in 1:nc)
{
means[i]<-mean(y[i])
}
means
}
columnmean(airquality)
columnmean<-function(y,removeNA=TRUE)
nc<-ncol(y)
memans<-numeric(nc)
for (i in 1:nc)
{
means[i]<-mean(y[i])
}
means
}
columnmean<-function(y,removeNA=TRUE)
{
nc<-ncol(y)
memans<-numeric(nc)
for (i in 1:nc)
{
means[i]<-mean(y[i])
}
means
}
columnmean(airquality)
columnmean<-function(y,removeNA=TRUE)
{
nc<-ncol(y)
means<-numeric(nc)
for (i in 1:nc)
{
means[i]<-mean(y[i])
}
means
}
columnmean(airquality)
columnmean<-function(y,removeNA=TRUE)
{
nc<-ncol(y)
means<-numeric(nc)
for (i in 1:nc)
{
means[i]<-mean(y[,i])
}
means
}
columnmean(airquality)
columnmean<-function(y,removeNA=TRUE)
{
nc<-ncol(y)
means<-numeric(nc)
for (i in 1:nc)
{
means[i]<-mean(y[,i],na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality,FALSE)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in id) {
dat <- rbind(dat, read.csv(files_full[i]))
}
mean(dat[, pollutant], na.rm = TRUE)
}
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library(dyplr)
install.packages(dyplr)
library(dpylr)
library(dplyr)
chicago<-readRDS("chicago.rds")
getwd()
setwd("C:\Users\avadakapuram\Github\Getting and Cleaning Data\week3")
setwd("C:/Users/avadakapuram/Github/Getting and Cleaning Data/week3")
getwd()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
data.frame
dt <- data.table(read.csv(f))
library(XLConnect)
library(data.table)
dt <- data.table(read.csv(f))
agricultureLogical <- dt$ACR == 3 & dt$AGS == 6
which(agricultureLogical)[1:3]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode="wb")
img <- readJPEG(f, native=TRUE)
install.packages("jpeg")
library(jpeg)
img <- readJPEG(f, native=TRUE)
quantile(img, probs=c(0.3, 0.8))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[, mean(rankingGDP, na.rm=TRUE), by=Income.Group]
breaks <- quantile(dt$rankingGDP, probs=seq(0, 1, 0.2), na.rm=TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks=breaks)
dt[Income.Group == "Lower middle income", .N, by=c("Income.Group", "quantileGDP")]
getwd()
setwd("C:/Users/avadakapuram/Github/Getting and Cleaning Data/Getting and Cleaning Data Course Project")
q()
